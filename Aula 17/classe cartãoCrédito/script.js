// CLASSE BASE ‚Äî M√ÉE
class Cartao {
    #limite;
    constructor(titular, limite) {
        this.titular = titular;
        this.#limite = limite;
    }
    
    get limite() {
        return this.#limite;
    }

    set limite(novoLimite) {
        if (novoLimite >= 0) {
            this.#limite = novoLimite;
        } else {
            console.log("‚ö†Ô∏è O limite n√£o pode ser negativo!");
        }
    }

    // M√©todo que cada cart√£o vai sobrescrever para indicar o tipo de cart√£o
    tipo() {
        return "Cat√£o";
    }

    realizarCompra(valor) {
        console.log(` ${this.tipo()}`); // exibe o tipo do cart√£o antes da compra
        if(valor <= this.#limite) {
            this.#limite -= valor
            console.log(`‚úîÔ∏è Compra no Valor: ${valor.toLocaleString("pt-BR", { 
                style: 'currency', 
                currency: 'BRL' 
            })} ‚Äî Bem Sucedida! ‚úîÔ∏è`)
            console.log(`üí∞ Limite restante: ${this.#limite.toLocaleString("pt-BR", { 
                style: 'currency', 
                currency: 'BRL' 
            })}\n`)
        } else {
            console.log(`‚ö†Ô∏è Compra no valor: ${valor.toLocaleString("pt-BR", { 
                style: 'currency', 
                currency: 'BRL' 
            })} ‚Äî Negada. ‚ö†Ô∏è`)
            console.log(`‚ö†Ô∏è Cr√©dito insuficiente. \nüí∞ Limite Atual: ${this.#limite.toLocaleString( "pt-BR", { 
                style: 'currency', 
                currency: 'BRL' 
            })}\n`)
        }
    }

    mostrarInfo() {
        console.log(`\nüë§ Titular: ${this.titular}`);
        console.log(`üí∞ Limite atual: ${this.#limite.toLocaleString("pt-BR", {
            style: "currency",
            currency: "BRL",
        })}`);
    }
}

// CLASSE FILHA (Cart√£o de Cr√©dito)
class CartaoCredito extends Cartao {
    constructor(titular, limite, bandeira) {
        super(titular, limite); // "super" chama o construtor da classe m√£e
        this.bandeira = bandeira;
    }

    tipo() {
        return `üí≥ Cart√£o de Cr√©dito (${this.bandeira})`; // vai retornar o cart√£o de Cr√©dito com sua bandeira
    }

    mostrarInfo() {
        console.log(`\nüí≥ Cart√£o de Cr√©dito (${this.bandeira})`);
        super.mostrarInfo(); // aproveita o m√©todo da classe m√£e
    }
}

// Classe filha (Cart√£o de D√©bito)
class CartaoDebito extends Cartao {
    constructor(titular, limite) {
        super(titular, limite);
    }
    
    tipo() {
        return "üé´ Cart√£o de D√©bito";
    }

    mostrarInfo() {
        console.log(`\nüé´ Cart√£o de D√©bito`);
        super.mostrarInfo();
    }
}


// --- CRIA√á√ÉO DOS OBJETOS ---
const cartao1 = new CartaoCredito('Victorclay', 1500, "Visa");
const cartao2 = new CartaoDebito("Victorclay", 800)

// --- MOSTRAR INFORMA√á√ïES INICIAIS ---
console.log("===== INFORMA√á√ïES INICIAIS =====");
cartao1.mostrarInfo();
cartao2.mostrarInfo();

// --- REALIZAR COMPRAS ---
console.log("\n===== REALIZANDO COMPRAS =====\n");
cartao1.realizarCompra(299.99);
cartao1.realizarCompra(919.99);
cartao1.realizarCompra(359.99);
cartao2.realizarCompra(319.99);
cartao2.realizarCompra(749.99);


// --- MOSTRAR INFORMA√á√ïES FINAIS ---
console.log("\n===== INFORMA√á√ïES FINAIS =====");
cartao1.mostrarInfo();
cartao2.mostrarInfo();